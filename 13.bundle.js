(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{41:function(e,r,t){"use strict";t.r(r);
/**
 * Viz.js 3.0.1 (Graphviz 2.44.0, Expat 2.2.9, Emscripten 1.39.16)
 * @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt MIT licensed
 *
 * This distribution contains other software in object code form:
 * - [Emscripten](https://github.com/emscripten-core/emscripten/blob/master/LICENSE)
 * - [Expat](https://github.com/libexpat/libexpat/blob/master/expat/COPYING)
 * - [Graphviz](https://graphviz.org/license/)
 */
class s{constructor(e){this._listeners=[],this._nextId=0,this._executing=0,this._worker=e,this._isNodeWorker="function"==typeof e.ref,this._isNodeWorker?(this._worker.on("message",e=>this._eventListener({data:e})),this._worker.on("error",e=>this._listeners.forEach(r=>r(e)))):this._worker.addEventListener("message",e=>this._eventListener(e))}_eventListener(e){const{id:r,error:t,result:s}=e.data;this._listeners[r](t,s),delete this._listeners[r],this._isNodeWorker&&0==--this._executing&&this._worker.unref()}render(e,r){return new Promise((t,s)=>{const n=this._nextId++;this._isNodeWorker&&0==this._executing++&&this._worker.ref(),this._listeners[n]=function(e,r){if(e){const r=new Error(e.message);return e.fileName&&(r.fileName=e.fileName),e.lineNumber&&(r.lineNumber=e.lineNumber),s(r)}t(r)},this._worker.postMessage({id:n,src:e,options:r})})}terminate(){return this._worker.terminate()}}var n=class{constructor(e){if(e||(e={}),void 0!==e.workerURL)this._wrapper=new s(new Worker(e.workerURL,{type:"module"}));else{if(void 0===e.worker)throw new Error("Must specify workerURL or worker option.");this._wrapper=new s(e.worker)}}renderString(e,{format:r="svg",engine:t="dot",files:s=[],images:n=[],yInvert:i=!1,nop:o=0}={}){for(const{path:e,width:r,height:t}of n)s.push({path:e,data:`<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg width="${r}" height="${t}"></svg>`});return this._wrapper.render(e,{format:r,engine:t,files:s,yInvert:i,nop:o})}renderJSONObject(e,r={}){let{format:t}=r;return t&&t.startsWith("json")||(t="json"),this.renderString(e,{...r,format:t}).then(JSON.parse)}terminateWorker(){return this._wrapper.terminate()}};let i,o;r.default=async(e,r,s)=>(r&&r!==o?i=new n(o=r):void 0===i&&(i=await t.e(4).then(t.t.bind(null,40,1)).then(e=>new n({worker:e.default()}))),i.renderString(e,s).catch(e=>{throw o=void 0,e}))}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{17:function(e,t,s){"use strict";s.r(t);var n=s(20),o=s(22);function r(e){const t=[],s=Object(n.g)(e,"[");for(const e of s)if(/^\[.*\]$/.test(e)){const s=Object(n.b)(e.substr(1,e.length-2),!0);t.push([s.isNote?"note":"object",s.part,s.bg,s.fontcolor])}else if("-"===e)t.push(["signal","","","dashed",""]);else{if(!e.includes(">"))throw new Error("Invalid expression");{const s=e.includes(">>")?"async":e.includes(".>")?"dashed":"solid",n=e.startsWith("(")||e.startsWith(")")?e.charAt(0):"",o=e.match(/[\.|>]?>[\(|\)]?$/);if(null===o)throw new Error("Invalid expression");const r=o.index>0?e.substr(0,o.index):"",a=e.endsWith("(")||e.endsWith(")")?e.charAt(e.length-1):"";t.push(["signal",n,r,s,a])}}return t}t.default=function(e,t){const a=[],c=[],i=new o.a;for(const t of e){const e=r(t);for(const t of e){const[e,s]=t;"object"===e&&i.createUid(s,t=>{const o={type:e,name:t,label:Object(n.c)(s,20,!0),index:a.length};return a.push(o),o})}const s=3===e.length&&"object"===e[0][0]&&"signal"===e[1][0];if(s&&"object"===e[2][0]){const[t,s,n,o]=e[1],r=i.getUid(e[0][1]),a=i.getUid(e[2][1]);switch(o){case"dashed":c.push({type:"signal",actorA:r,actorB:a,linetype:"dashed",arrowtype:"arrow-filled",message:n});break;case"solid":c.push({type:"signal",actorA:r,actorB:a,linetype:"solid",arrowtype:"arrow-filled",message:n});break;case"async":c.push({type:"signal",actorA:r,actorB:a,linetype:"solid",arrowtype:"arrow-open",message:n})}}else if(s&&"note"===e[2][0]){const t=i.getUid(e[0][1]),s={type:"note",message:Object(n.c)(e[2][1],20,!0),actor:t};e[2][2]&&(s.bgcolor=e[2][2]),e[2][3]&&(s.fontcolor=e[2][3]),c.push(s)}}return s.e(1).then(s.bind(null,12)).then(e=>e.default).then(e=>new e(a,c,i._uids,t.isDark).svg_.serialize())}}}]);
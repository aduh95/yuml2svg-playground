(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{36:function(e,t,r){"use strict";r.r(t);const n={class:"./class-diagram",usecase:"./usecase-diagram",activity:"./activity-diagram",state:"./state-diagram",deployment:"./deployment-diagram",package:"./package-diagram",sequence:"./sequence-diagram"},a={topDown:"TB",leftToRight:"LR",rightToLeft:"RL"};t.default=((e,t,n,a)=>{t||(t={}),t.dir||(t.dir="TB"),t.type||(t.type="class"),t.isDark||(t.isDark=!1);const i=[];return e.read&&"function"==typeof e.read?r(38)("./handle-stream").then(e=>e.default).then(r=>r(e,o(t,i))).then(()=>s(i,t,n,a)):(e.toString().split(/\r|\n/).forEach(o(t,i)),s(i,t,n,a))});const s=(e,t,a,s)=>{if(0===e.length)return Promise.resolve('<svg xmlns="http://www.w3.org/2000/svg"/>');if(!t.hasOwnProperty("type"))return Promise.reject(new Error("Error: Missing mandatory 'type' directive"));if(!(t.type in n))return Promise.reject(new Error("Invalid diagram type"));{const{isDark:o,dotHeaderOverrides:i}=t;try{const i=n[t.type],l=r(38)(i).then(r=>r.default(e,t));return"sequence"===t.type?l:Promise.all([Promise.all([r(38)("./dot2svg").then(e=>e.default),r(38)("./wrapDotDocument").then(e=>e.default),l]).then(([e,t,r])=>e(t(r,o),a,s)),r(38)("./svg-utils").then(e=>e.default)]).then(([e,t])=>t(e,o))}catch(e){return Promise.reject(e)}}},o=(e,t)=>r=>{(r=r.trim()).startsWith("//")?i(r,e):r.length&&t.push(r)},i=function(e,t){const r=/^\/\/\s+\{\s*([\w]+)\s*:\s*([\w]+)\s*\}$/.exec(e);if(null!==r&&3===r.length){const[e,s,o]=r;switch(s){case"type":o in n?t.type=o:console.warn(new Error("Invalid value for 'type'. Allowed values are: "+Object.keys(n).join(", ")));break;case"direction":o in a?t.dir=a[o]:console.warn(new Error("Invalid value for 'direction'. Allowed values are: "+Object.keys(a).join(", ")));break;case"generate":/^(true|false)$/.test(o)?(t.generate="true"===o,console.warn("Generate option is not supported")):console.warn(new Error("Error: invalid value for 'generate'. Allowed values are: true, false <i>(default)</i>."))}}}},38:function(e,t){function r(e){return Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}r.keys=function(){return[]},r.resolve=r,e.exports=r,r.id=38}}]);